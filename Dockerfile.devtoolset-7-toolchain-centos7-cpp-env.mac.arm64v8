ARG BASE=arm64v8/centos:7
FROM ${BASE}


RUN yum -y -q update \
 && yum install -y -q centos-release-scl.noarch centos-release-scl-rh.noarch \
 && yum -y -q update \
 && INSTALL_PKGS="\
    devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-gcc-gfortran devtoolset-7-gdb \
    make \
    build-essential \
    clang \
    rsync \
    tar \
    python \
    sudo \
    autoconf \
    automake \
    locales-all \
    dos2unix \
    ninja-build" \
 && yum install -y -q  --setopt=tsflags=nodocs ${INSTALL_PKGS} 

RUN yum clean all

ARG KEEP_DEPENDENCIES=false

# install required build tools via packet manager
RUN yum install -y -q  \
    file which libtool autoconf perl-devel python-devel xz-devel patch \
    rh-git227 \
    devtoolset-7-libasan-devel devtoolset-7-libtsan-devel devtoolset-7-liblsan-devel  devtoolset-7-libubsan-devel    

# temporary working directory
WORKDIR /tmp

# [CMAKE]
ARG CMAKE_VERSION=3.22.3
RUN curl -sL https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-aarch64.sh -o /tmp/cmake-install.sh \
    && chmod u+rx /tmp/cmake-install.sh \
    && /tmp/cmake-install.sh --skip-license --prefix=/usr \
    && if [ "${KEEP_DEPENDENCIES}" = "false" ]; then rm -rf /tmp/cmake-install.sh ; fi

ARG LIBRARIES_INSTALL_PATH=/usr/local
# [OPENSSL]
# this has TCC implications
# consider instead RUN apt-get install openssl-libs openssl-dev
ARG LIB_OPENSSL_VERSION=1.1.1q
RUN curl -sL https://www.openssl.org/source/openssl-${LIB_OPENSSL_VERSION}.tar.gz -o openssl-${LIB_OPENSSL_VERSION}.tar.gz \
    && tar -zxvf openssl-${LIB_OPENSSL_VERSION}.tar.gz \
    && cd /tmp/openssl-${LIB_OPENSSL_VERSION} \
    && ./config --prefix=${LIBRARIES_INSTALL_PATH} no-shared \
    && make -j $(nproc) \
    && make install_sw \
    && cd .. \
    &&  if [ "${KEEP_DEPENDENCIES}" = "false" ]; then \
            rm -rf openssl-${LIB_OPENSSL_VERSION}.tar.gz \
                   openssl-${LIB_OPENSSL_VERSION}; \
            fi

# this has the bad taste of also intalling devtoolset-8 ...
RUN yum install -y -q llvm-toolset-7.0 llvm-toolset-7.0-llvm-devel llvm-toolset-7.0-clang-devel llvm-toolset-7.0-clang-tools-extra.aarch64 llvm-toolset-7.0-llvm-static.aarch64 zlib-devel zlib-static zlib


RUN (echo source /opt/rh/rh-git227/enable ; \
     echo source /opt/rh/devtoolset-7/enable ; \
     echo source /opt/rh/llvm-toolset-7.0/enable; \
     echo source /opt/rh/httpd24/enable \
     )> /opt/rh/enable_all

# Enable the SCL for all bash scripts.
ENV BASH_ENV=/opt/rh/enable_all \
    ENV=/opt/rh/enable_all \
    C_INCLUDE_PATH=/opt/rh/llvm-toolset-7.0/root/usr/include \
    CPLUS_INCLUDE_PATH=/opt/rh/llvm-toolset-7.0/root/usr/include \
    LIBRARY_PATH=/opt/rh/httpd24/root/usr/lib64:/opt/rh/llvm-toolset-7.0/root/usr/lib64  \
    LD_LIBRARY_PATH=/opt/rh/httpd24/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dyninst:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/httpd24/root/usr/lib64:/opt/rh/llvm-toolset-7.0/root/usr/lib64 \
    PROMPT_COMMAND=". /opt/rh/enable_all"

# for CLion until I ugrade
RUN ln -s /opt/rh/rh-git227/root/usr/bin/git /usr/local/bin/git
